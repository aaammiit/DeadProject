from django.db import models
import os
from django.contrib.auth.models import User
# Create your models here.
class Database(models.Model):
    dataBaseFile=models.FileField(upload_to='database')
    dataTime=models.DateTimeField(auto_now=True)

    def delete_file(self):
        if self.dataBaseFile:
            if os.path.exists(self.dataBaseFile.path):
                os.remove(self.dataBaseFile.path)
            super().delete()


class krimaCompanyData(models.Model):
        Unique_ID = models.CharField(max_length=100 , blank=True , null=True)
        rbID = models.CharField(max_length=100 , blank=True , null=True)
        Unique_REC_ID = models.CharField(max_length=100 , blank=True , null=True)
        rbCountry = models.CharField(max_length=100 , blank=True , null=True)
        rbContinent = models.CharField(max_length=100 , blank=True , null=True)
        rbState = models.CharField(max_length=100 , blank=True , null=True)
        Regulatory = models.CharField(max_length=100 , blank=True , null=True)
        Date = models.DateField(blank=True , null=True)
        Date1 = models.DateField(blank=True , null=True)
        Title = models.CharField(max_length=1000 , blank=True , null=True)
        URL = models.URLField(max_length=1000 , blank=True , null=True)
        Article = models.TextField(blank=True , null=True)
        gpt_type = models.CharField(max_length=100 , blank=True , null=True)
        GPT_Description_Automated_0 = models.CharField(max_length=2000 , blank=True , null=True)
        GPT_Description_Automated_1 = models.CharField(max_length=2000 , blank=True , null=True)
        Company_Name = models.CharField(max_length=100 , blank=True , null=True)
        Parent_Company_Name = models.CharField(max_length=100 , blank=True , null=True)
        Entity_Status = models.CharField(max_length=100 , blank=True , null=True)
        Imposed_Civil_Penalty = models.CharField(max_length=1000 , blank=True , null=True)
        Disgorgement_Restitution_Amount = models.CharField(max_length=1000 , blank=True , null=True)
        Prejudgement_Interest_Amount = models.CharField(max_length=1000 , blank=True , null=True)
        Total_Imposed_Penalty = models.CharField(max_length=1000 , blank=True , null=True)
        Settled_Value = models.CharField(max_length=1000 , blank=True , null=True)
        Currency_Code = models.CharField(max_length=1000 , blank=True , null=True)
        Non_Monetary_Penalty = models.CharField(max_length=1000 , blank=True , null=True)
        New_Title = models.CharField(max_length=1000 , blank=True , null=True)
        Summary = models.CharField(max_length=5000 , blank=True , null=True)
        Area_of_activity_or_service = models.CharField(max_length=1000 , blank=True , null=True)
        Area_of_regulation = models.CharField(max_length=1000 , blank=True , null=True)
        Error = models.CharField(max_length=1000 , blank=True , null=True)
        KRIMA_researcher = models.CharField(max_length=100 , blank=True , null=True)
        KRIMA_status = models.CharField(max_length=100 , blank=True , null=True)
        KRIMA_true_false = models.CharField(max_length=100 , blank=True , null=True)
        KRIMA_type = models.CharField(max_length=100 , blank=True , null=True)
        KRIMA_notes = models.CharField(max_length=100 , blank=True , null=True)
        KRIMA_edited_gpt_person_or_business = models.CharField(max_length=1000 , blank=True , null=True)
        KRIMA_edited_gpt_company_check = models.CharField(max_length=1000 , blank=True , null=True)
        Krima_Segmentation_Researcher = models.CharField(max_length=1000 , blank=True , null=True)
        Krima_Area_of_activity_or_service = models.CharField(max_length=1000 , blank=True , null=True)
        Krima_Area_of_regulation = models.CharField(max_length=1000 , blank=True , null=True)
        Krima_Segmentation_Status = models.CharField(max_length=1000 , blank=True , null=True)
        KRIMA_Segmentation_notes = models.CharField(max_length=1000 , blank=True , null=True)
        KRIMA_civil_penalty_validated = models.CharField(max_length=1000 , blank=True , null=True)
        KRIMA_civil_penalty_cleansed = models.CharField(max_length=1000 , blank=True , null=True)
        KRIMA_currency = models.CharField(max_length=100 , blank=True , null=True)
        KRIMA_civil_penalty_usd = models.CharField(max_length=1000 , blank=True , null=True)
        KRIMA_disgorgement_restitution_local_currency = models.CharField(max_length=1000 , blank=True , null=True)
        KRIMA_disgorgement_restitution_USD = models.CharField(max_length=1000 , blank=True , null=True)
        KRIMA_prejudgement_interest_local_currency = models.CharField(max_length=1000 , blank=True , null=True)
        KRIMA_prejudgement_interest_USD = models.CharField(max_length=1000 , blank=True , null=True)
        KRIMA_imposed_penalty_local_currency = models.CharField(max_length=1000 , blank=True , null=True)
        KRIMA_imposed_penalty_USD = models.CharField(max_length=1000 , blank=True , null=True)
        KRIMA_settled_value = models.CharField(max_length=1000 , blank=True , null=True)
        KRIMA_percentage_discount = models.CharField(max_length=1000 , blank=True , null=True)
        KRIMA_non_monetary_penalty = models.CharField(max_length=1000 , blank=True , null=True)
        Sanctioned_Entity = models.CharField(max_length=1000 , blank=True , null=True)
        Entity_Classification = models.CharField(max_length=1000 , blank=True , null=True)
        Type_of_RC = models.CharField(max_length=1000 , blank=True , null=True)
        Effective_Date = models.DateField(max_length=1000 , blank=True , null=True)
        Compliance_Timeline = models.CharField(max_length=1000 , blank=True , null=True)
        Status = models.CharField(max_length=1000 , blank=True , null=True)
        Classification = models.CharField(max_length=1000 , blank=True , null=True)
        Comment_Deadline = models.CharField(max_length=1000 , blank=True , null=True)
        Rule_Regualtion_Act = models.CharField(max_length=1000 , blank=True , null=True)
        Regulatory_Authority_or_Speaker = models.CharField(max_length=1000 , blank=True , null=True)
        Designation = models.CharField(max_length=1000 , blank=True , null=True)
        Compliance_Challenges_or_Key_Regulatory_Concerns = models.CharField(max_length=1000 , blank=True , null=True)
        Regulatory_Impact_or_Expected_Compliance_Outcome = models.CharField(max_length=1000 , blank=True , null=True)
        Jurisdiction_Body = models.CharField(max_length=1000 , blank=True , null=True)
        Case_Number = models.CharField(max_length=1000 , blank=True , null=True)
        Total_Debt = models.CharField(max_length=1000 , blank=True , null=True)
        Applicant = models.CharField(max_length=1000 , blank=True , null=True)
        Respondent = models.CharField(max_length=1000 , blank=True , null=True)
        Corporate_Debtor = models.CharField(max_length=1000 , blank=True , null=True)
        Debtor_CIN = models.CharField(max_length=1000 , blank=True , null=True)
        Corporate_Creditor = models.CharField(max_length=1000 , blank=True , null=True)
        Creditor_CIN = models.CharField(max_length=1000 , blank=True , null=True)
        Interim_Resolution_Professional = models.CharField(max_length=1000 , blank=True , null=True)
        Resolution_Professional = models.CharField(max_length=1000 , blank=True , null=True)
        IRP_or_RP_Registration_Number = models.CharField(max_length=1000 , blank=True , null=True)
        Legal_Team_for_Appeallant = models.CharField(max_length=1000 , blank=True , null=True)
        Legal_Team_for_Respondent = models.CharField(max_length=1000 , blank=True , null=True)
        Case_Status = models.CharField(max_length=1000 , blank=True , null=True)
        Successful_Resolution_Applicant = models.CharField(max_length=1000 , blank=True , null=True)
        Resolution_Amount = models.CharField(max_length=1000 , blank=True , null=True)
        Liquidation_Professional = models.CharField(max_length=1000 , blank=True , null=True)
        Liquidation_Claim = models.CharField(max_length=1000 , blank=True , null=True)
        Average_Liquidation_Amount = models.CharField(max_length=1000 , blank=True , null=True)
        Personal_Gurantor = models.CharField(max_length=1000 , blank=True , null=True)
        Settlement_Reached = models.CharField(max_length=1000 , blank=True , null=True)
        Mode_of_Settlement = models.CharField(max_length=1000 , blank=True , null=True)
        Settlement_Amount = models.CharField(max_length=1000 , blank=True , null=True)




# Create your models here.
class webUser(models.Model):
    user=models.ForeignKey(User,on_delete=models.CASCADE)   
    def __str__(self):
        user=self.user.username
        return user